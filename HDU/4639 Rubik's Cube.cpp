#include<bits/stdc++.h>
using namespace std;

const int L = 203;
const int N = 55;

int p[12][5][4]= {
    {{1,3,9,7},{2,6,8,4},{15,12,21,18},{13,10,19,16},{14,11,20,17}}, // U
    {{16,18,42,40},{17,30,41,28},{15,3,43,48},{39,9,19,54},{27,6,31,51}}, // R
    {{13,15,39,37},{14,27,38,25},{12,9,40,46},{36,7,16,48},{8,28,47,24}}, // F
    {{46,48,54,52},{47,51,53,49},{37,40,43,34},{39,42,45,36},{38,41,44,35}}, // D
    {{10,12,36,34},{11,24,35,22},{7,37,52,21},{1,13,46,45},{4,25,49,33}}, // L
    {{19,21,45,43},{20,33,44,31},{1,34,54,18},{3,10,52,42},{2,22,53,30}}, // B

    {{7,9,3,1},{4,8,6,2},{18,21,12,15},{16,19,10,13},{17,20,11,14}}, // U'
    {{40,42,18,16},{28,41,30,17},{48,43,3,15},{54,19,9,39},{51,31,6,27}}, // R'
    {{37,39,15,13},{25,38,27,14},{46,40,9,12},{48,16,7,36},{24,47,28,8}}, // F'
    {{52,54,48,46},{49,53,51,47},{34,43,40,37},{36,45,42,39},{35,44,41,38}}, // D'
    {{34,36,12,10},{22,35,24,11},{21,52,37,7},{45,46,13,1},{33,49,25,4}}, // L'
    {{43,45,21,19},{31,44,33,20},{18,54,34,1},{42,52,10,3},{30,53,22,2}} // B'
};

int q[6][3][4]= {
    {{26,23,32,29},{25,22,31,28},{27,24,33,30}}, // X
    {{26,5,32,50},{38,8,20,53},{14,2,44,47}}, // Y
    {{29,5,23,50},{17,4,35,51},{41,6,11,49}}, // Z

    {{29,32,23,26},{28,31,22,25},{30,33,24,27}}, // X'
    {{50,32,5,26},{53,20,8,38},{47,44,2,14}}, // Y'
    {{50,23,5,29},{51,35,4,17},{49,11,6,41}} // Z'
};

int id[256], now[N], go[N][18];

void init() {

    id['U'] = 0;
    id['R'] = 1;
    id['F'] = 2;
    id['D'] = 3;
    id['L'] = 4;
    id['B'] = 5;
    id['u'] = 6;
    id['r'] = 7;
    id['f'] = 8;
    id['d'] = 9;
    id['l'] = 10;
    id['b'] = 11;

    id['X'] = 12;
    id['Y'] = 13;
    id['Z'] = 14;
    id['x'] = 15;
    id['y'] = 16;
    id['z'] = 17;

    for(int i = 0; i < 18; i++)
        for(int j = 0; j < N; j++) go[j][i] = j;

    for(int i = 0; i < 12; i++)
        for(int j = 0; j < 5; j++)
            for(int k = 0; k < 4; k++)
                go[p[i][j][k]][i] = p[i][j][(k + 1)%4];

    for(int i = 0; i < 6; i++)
        for(int j = 0; j < 3; j++)
            for(int k = 0; k < 4; k++)
                go[q[i][j][k]][i + 12] = q[i][j][(k + 1)%4];
}

void proc(char ch) {
    int x = id[ch];
    for(int i = 0; i < N; i++) {
        now[i] = go[now[i]][x];
//        printf("%d: %d\n", i, now[i]);
    }
}

char s[L];
int main() {

    init();

    bool fi = true;
    while(scanf("%s", s) != EOF) {

        for(int i = 0; i < N; i++) now[i] = i;

        int n = strlen(s);
        for(int i = 0; i < n; i++) {
            proc(s[i]);
        }
        bool same = true;
        for(int i = 0; i < N; i++) if(now[i] != i) {
                same = false;
                break;
            }
        if(!fi) {
            printf("\n");
        } else fi = false;
        printf(same ? "Yes\n" : "No\n");
    }
    return 0;
}
